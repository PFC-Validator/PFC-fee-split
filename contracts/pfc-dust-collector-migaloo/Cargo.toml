[package]

name = "pfc-dust-collector-migaloo-contract"
description = "smart contract to split incoming $ to multiple places"
authors = { workspace = true }
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
documentation = { workspace = true }
keywords = { workspace = true }
rust-version = { workspace = true }

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[features]
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
# use library feature to disable all init/handle/query exports
library=[]

[dependencies]
cw2 = { workspace = true }

pfc-fee-split = { workspace = true }
cosmwasm-std = { workspace = true }
cw-storage-plus = "1.0.1"

cosmwasm-schema = { workspace = true }
schemars = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
pfc-steak={ workspace = true }
cw-ownable = { workspace = true }
pfc-dust-collector-migaloo={ workspace = true }
pfc-whitelist={ workspace = true }
pool-network= {version="2.8.1", path="../../../white-whale-core/packages/pool-network"}

[build-dependencies]
protoc-rust = "2"

[dev-dependencies]

serde_json ={ workspace = true }
convert_case = "0.6.0"

#[profile.release]
#overflow-checks = true

[package.metadata.scripts]
optimize = """docker run --rm -v "$(pwd)":/code \
          --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
            --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
              cosmwasm/rust-optimizer:0.12.10"""
optimize-w32 = """docker run --rm -v c:\\pfc\\fractional\\fee-split:/code  \
            --mount type=volume,source=pfc_fee_splitter_cache,target=/code/target \
            --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
            cosmwasm/rust-optimizer:0.12.10"""
optimize-arm64 = """docker run --rm -v "$(pwd)":/code \
          --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
            --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
              cosmwasm/rust-optimizer-arm64:0.12.10"""